var helpers = require("../../../../../.nvm/versions/node/v14.16.0/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "MainView", function () {
    return MainView;
  });
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  require('');
  var _reactRouterDom = require("react-router-dom");
  var _loginViewLoginViewJsx = require("../login-view/login-view.jsx");
  var _movieCardMovieCardJsx = require("../movie-card/movie-card.jsx");
  var _movieViewMovieViewJsx = require("../movie-view/movie-view.jsx");
  var _registerViewRegisterViewJsx = require("../register-view/register-view.jsx");
  var _genreViewGenreViewJsx = require("../genre-view/genre-view.jsx");
  var _directorViewDirectorViewJsx = require("../director-view/director-view.jsx");
  var _profileViewProfileViewJsx = require("../profile-view/profile-view.jsx");
  var _reactBootstrapNavbar = require("react-bootstrap/Navbar");
  var _reactBootstrapNavbarDefault = _parcelHelpers.interopDefault(_reactBootstrapNavbar);
  var _reactBootstrapNav = require("react-bootstrap/Nav");
  var _reactBootstrapNavDefault = _parcelHelpers.interopDefault(_reactBootstrapNav);
  var _reactBootstrapRow = require("react-bootstrap/Row");
  var _reactBootstrapRowDefault = _parcelHelpers.interopDefault(_reactBootstrapRow);
  var _reactBootstrapCol = require("react-bootstrap/Col");
  var _reactBootstrapColDefault = _parcelHelpers.interopDefault(_reactBootstrapCol);
  var _jsxFileName = "/Users/alexsneath/careerfoundry/myFlix-client/src/components/main-view/main-view.jsx";
  class MainView extends _reactDefault.default.Component {
    constructor() {
      super();
      this.state = {
        movies: [],
        user: null
      };
    }
    getMovies(token) {
      _axiosDefault.default.get("https://alexdb.herokuapp.com/movies", {
        headers: {
          Authorization: `Bearer ${token}`
        }
      }).then(response => {
        this.setState({
          movies: response.data
        });
      }).catch(error => {
        console.log(error);
      });
    }
    componentDidMount() {
      let accessToken = localStorage.getItem("token");
      if (accessToken !== null) {
        this.setState({
          user: localStorage.getItem("user")
        });
        this.getMovies(accessToken);
      }
    }
    onLoggedIn(authData) {
      console.log("authdata" + authData);
      this.setState({
        user: authData.user.Username
      });
      localStorage.setItem("token", authData.token);
      localStorage.setItem("user", authData.user.Username);
      this.getMovies(authData.token);
    }
    onLoggedOut() {
      localStorage.removeItem("token");
      localStorage.removeItem("user");
      this.setState({
        user: null
      });
    }
    render() {
      const {movies, user} = this.state;
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_reactDefault.default.Fragment, null, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavbarDefault.default, {
          bg: "dark",
          variant: "dark",
          className: "my-4 mx-auto py-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 80,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavbarDefault.default.Brand, {
          href: "/",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 81,
            columnNumber: 11
          }
        }, "AlexMDB"), user ? /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavbarDefault.default.Collapse, {
          className: "justify-content-end",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 83,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 84,
            columnNumber: 15
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavDefault.default.Item, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 85,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavDefault.default.Link, {
          href: `/users/${user}`,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 86,
            columnNumber: 19
          }
        }, "Account")), /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavDefault.default.Item, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 88,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapNavDefault.default.Link, {
          onClick: () => this.onLoggedOut(),
          href: "/",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 89,
            columnNumber: 19
          }
        }, "Log Out")))) : /*#__PURE__*/_reactDefault.default.createElement(_reactDefault.default.Fragment, null)), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 99,
            columnNumber: 9
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapRowDefault.default, {
          className: "main-view justify-content-md-center",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 100,
            columnNumber: 11
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          exact: true,
          path: "/",
          render: () => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 107,
                  columnNumber: 21
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginViewJsx.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 108,
                  columnNumber: 23
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 111,
                  columnNumber: 49
                }
              })
            );
            return movies.map(m => /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
              md: 4,
              key: m._id,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 113,
                columnNumber: 19
              }
            }, /*#__PURE__*/_reactDefault.default.createElement(_movieCardMovieCardJsx.MovieCard, {
              movie: m,
              __self: this,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 114,
                columnNumber: 21
              }
            })));
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 101,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/register",
          render: () => {
            if (user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Redirect, {
                to: "/",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 123,
                  columnNumber: 34
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 125,
                  columnNumber: 19
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_registerViewRegisterViewJsx.RegisterView, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 126,
                  columnNumber: 21
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 120,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/users/:name",
          render: ({history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 137,
                  columnNumber: 21
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginViewJsx.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 138,
                  columnNumber: 23
                }
              }))
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 142,
                  columnNumber: 19
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_profileViewProfileViewJsx.ProfileView, {
                user: user,
                movie: movies,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 143,
                  columnNumber: 21
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 132,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/movies/:movieId",
          render: ({match, history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 158,
                  columnNumber: 21
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginViewJsx.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 159,
                  columnNumber: 23
                }
              }))
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 163,
                  columnNumber: 19
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_movieViewMovieViewJsx.MovieView, {
                movie: movies.find(m => m._id === match.params.movieId),
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 164,
                  columnNumber: 21
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 153,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/directors/:name",
          render: ({match, history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 178,
                  columnNumber: 21
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginViewJsx.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 179,
                  columnNumber: 23
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 182,
                  columnNumber: 49
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 184,
                  columnNumber: 19
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_directorViewDirectorViewJsx.DirectorView, {
                director: movies.find(m => m.Director.Name === match.params.name).Director,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 185,
                  columnNumber: 21
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 173,
            columnNumber: 13
          }
        }), /*#__PURE__*/_reactDefault.default.createElement(_reactRouterDom.Route, {
          path: "/genres/:name",
          render: ({match, history}) => {
            if (!user) return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 203,
                  columnNumber: 21
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginViewJsx.LoginView, {
                onLoggedIn: user => this.onLoggedIn(user),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 204,
                  columnNumber: 23
                }
              }))
            );
            if (movies.length === 0) return (
              /*#__PURE__*/_reactDefault.default.createElement("div", {
                className: "main-view",
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 207,
                  columnNumber: 49
                }
              })
            );
            return (
              /*#__PURE__*/_reactDefault.default.createElement(_reactBootstrapColDefault.default, {
                md: 8,
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 209,
                  columnNumber: 19
                }
              }, /*#__PURE__*/_reactDefault.default.createElement(_genreViewGenreViewJsx.GenreView, {
                genre: movies.find(m => m.Genre.Name === match.params.name).Genre,
                onBackClick: () => history.goBack(),
                __self: this,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 210,
                  columnNumber: 21
                }
              }))
            );
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 198,
            columnNumber: 13
          }
        }))))
      );
    }
  }
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
