var helpers = require("../../../../../.nvm/versions/node/v14.16.0/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  _parcelHelpers.export(exports, "RegisterView", function () {
    return RegisterView;
  });
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  require('prop-types');
  var _jsxFileName = "/Users/alexsneath/careerfoundry/myFlix-client/src/components/register-view/register-view.jsx", _s = $RefreshSig$();
  function RegisterView(props) {
    _s();
    const [username, setUsername] = _react.useState('');
    const [password, setPassword] = _react.useState('');
    const [email, setEmail] = _react.useState('');
    const [birthday, setBirthday] = _react.useState('');
    const handleSubmit = () => {
      event.preventDefault();
      console.log(username, password, email, birthday);
      props.onRegister(username);
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement("form", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 20,
          columnNumber: 5
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("label", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 21,
          columnNumber: 7
        }
      }, "Username:", /*#__PURE__*/_reactDefault.default.createElement("input", {
        type: "text",
        value: username,
        onChange: e => setUsername(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 23,
          columnNumber: 9
        }
      })), /*#__PURE__*/_reactDefault.default.createElement("label", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 24,
          columnNumber: 15
        }
      }, "Password:", /*#__PURE__*/_reactDefault.default.createElement("input", {
        type: "password",
        value: password,
        onChange: e => setPassword(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 26,
          columnNumber: 9
        }
      })), /*#__PURE__*/_reactDefault.default.createElement("label", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 27,
          columnNumber: 15
        }
      }, "Email:", /*#__PURE__*/_reactDefault.default.createElement("input", {
        type: "email",
        value: email,
        onChange: e => setEmail(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 29,
          columnNumber: 9
        }
      })), /*#__PURE__*/_reactDefault.default.createElement("label", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 30,
          columnNumber: 15
        }
      }, "Birthday:", /*#__PURE__*/_reactDefault.default.createElement("input", {
        type: "date",
        value: birthday,
        onChange: e => setBirthday(e.target.value),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 32,
          columnNumber: 9
        }
      })), /*#__PURE__*/_reactDefault.default.createElement("button", {
        type: "submit",
        onClick: handleSubmit,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 34,
          columnNumber: 7
        }
      }, "Sign Up"), /*#__PURE__*/_reactDefault.default.createElement("button", {
        type: "submit",
        onClick: props.toggleRegister,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 35,
          columnNumber: 7
        }
      }, "Log in"))
    );
  }
  _s(RegisterView, "oodxkowr8L/+sgf0pg4pF6PrtNw=");
  _c = RegisterView;
  RegisterView.propTypes;
  var _c;
  $RefreshReg$(_c, "RegisterView");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
